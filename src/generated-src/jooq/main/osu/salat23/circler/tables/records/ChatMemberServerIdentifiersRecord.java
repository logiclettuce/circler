/*
 * This file is generated by jOOQ.
 */
package osu.salat23.circler.tables.records;


import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;

import osu.salat23.circler.tables.ChatMemberServerIdentifiers;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChatMemberServerIdentifiersRecord extends UpdatableRecordImpl<ChatMemberServerIdentifiersRecord> implements Record4<Long, Long, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.chat_member_server_identifiers.id</code>.
     */
    public ChatMemberServerIdentifiersRecord setId(Long value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>public.chat_member_server_identifiers.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for
     * <code>public.chat_member_server_identifiers.chat_member_id</code>.
     */
    public ChatMemberServerIdentifiersRecord setChatMemberId(Long value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.chat_member_server_identifiers.chat_member_id</code>.
     */
    public Long getChatMemberId() {
        return (Long) get(1);
    }

    /**
     * Setter for
     * <code>public.chat_member_server_identifiers.player_identifier</code>.
     */
    public ChatMemberServerIdentifiersRecord setPlayerIdentifier(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for
     * <code>public.chat_member_server_identifiers.player_identifier</code>.
     */
    public String getPlayerIdentifier() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.chat_member_server_identifiers.server</code>.
     */
    public ChatMemberServerIdentifiersRecord setServer(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>public.chat_member_server_identifiers.server</code>.
     */
    public String getServer() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return ChatMemberServerIdentifiers.CHAT_MEMBER_SERVER_IDENTIFIERS.ID;
    }

    @Override
    public Field<Long> field2() {
        return ChatMemberServerIdentifiers.CHAT_MEMBER_SERVER_IDENTIFIERS.CHAT_MEMBER_ID;
    }

    @Override
    public Field<String> field3() {
        return ChatMemberServerIdentifiers.CHAT_MEMBER_SERVER_IDENTIFIERS.PLAYER_IDENTIFIER;
    }

    @Override
    public Field<String> field4() {
        return ChatMemberServerIdentifiers.CHAT_MEMBER_SERVER_IDENTIFIERS.SERVER;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getChatMemberId();
    }

    @Override
    public String component3() {
        return getPlayerIdentifier();
    }

    @Override
    public String component4() {
        return getServer();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getChatMemberId();
    }

    @Override
    public String value3() {
        return getPlayerIdentifier();
    }

    @Override
    public String value4() {
        return getServer();
    }

    @Override
    public ChatMemberServerIdentifiersRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public ChatMemberServerIdentifiersRecord value2(Long value) {
        setChatMemberId(value);
        return this;
    }

    @Override
    public ChatMemberServerIdentifiersRecord value3(String value) {
        setPlayerIdentifier(value);
        return this;
    }

    @Override
    public ChatMemberServerIdentifiersRecord value4(String value) {
        setServer(value);
        return this;
    }

    @Override
    public ChatMemberServerIdentifiersRecord values(Long value1, Long value2, String value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChatMemberServerIdentifiersRecord
     */
    public ChatMemberServerIdentifiersRecord() {
        super(ChatMemberServerIdentifiers.CHAT_MEMBER_SERVER_IDENTIFIERS);
    }

    /**
     * Create a detached, initialised ChatMemberServerIdentifiersRecord
     */
    public ChatMemberServerIdentifiersRecord(Long id, Long chatMemberId, String playerIdentifier, String server) {
        super(ChatMemberServerIdentifiers.CHAT_MEMBER_SERVER_IDENTIFIERS);

        setId(id);
        setChatMemberId(chatMemberId);
        setPlayerIdentifier(playerIdentifier);
        setServer(server);
    }

    /**
     * Create a detached, initialised ChatMemberServerIdentifiersRecord
     */
    public ChatMemberServerIdentifiersRecord(osu.salat23.circler.tables.pojos.ChatMemberServerIdentifiers value) {
        super(ChatMemberServerIdentifiers.CHAT_MEMBER_SERVER_IDENTIFIERS);

        if (value != null) {
            setId(value.getId());
            setChatMemberId(value.getChatMemberId());
            setPlayerIdentifier(value.getPlayerIdentifier());
            setServer(value.getServer());
        }
    }
}
